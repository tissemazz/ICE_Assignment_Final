!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("tslib"),require("@angular/cdk/testing")):"function"==typeof define&&define.amd?define("@angular/material/divider/testing",["exports","tslib","@angular/cdk/testing"],e):e(((t=t||self).ng=t.ng||{},t.ng.material=t.ng.material||{},t.ng.material.divider=t.ng.material.divider||{},t.ng.material.divider.testing={}),t.tslib,t.ng.cdk.testing)}(this,(function(t,e,i){"use strict";
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var n=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return e.__extends(n,t),n.with=function(t){return void 0===t&&(t={}),new i.HarnessPredicate(n,t)},n.prototype.getOrientation=function(){return e.__awaiter(this,void 0,void 0,(function(){return e.__generator(this,(function(t){switch(t.label){case 0:return[4,this.host()];case 1:return[2,t.sent().getAttribute("aria-orientation")]}}))}))},n.prototype.isInset=function(){return e.__awaiter(this,void 0,void 0,(function(){return e.__generator(this,(function(t){switch(t.label){case 0:return[4,this.host()];case 1:return[2,t.sent().hasClass("mat-divider-inset")]}}))}))},n.hostSelector="mat-divider",n}(i.ComponentHarness);
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */t.MatDividerHarness=n,Object.defineProperty(t,"__esModule",{value:!0})}));