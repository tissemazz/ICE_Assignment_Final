{"version":3,"file":"material-snack-bar-testing.umd.js","sources":["../../../../../../../src/material/snack-bar/testing/snack-bar-harness.ts","../../../../../../../src/material/snack-bar/testing/public-api.ts","../../../../../../../src/material/snack-bar/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {SnackBarHarnessFilters} from './snack-bar-harness-filters';\n\n/** Harness for interacting with a standard mat-snack-bar in tests. */\nexport class MatSnackBarHarness extends ComponentHarness {\n  // Developers can provide a custom component or template for the\n  // snackbar. The canonical snack-bar parent is the \"MatSnackBarContainer\".\n  /** The selector for the host element of a `MatSnackBar` instance. */\n  static hostSelector = '.mat-snack-bar-container';\n\n  private _simpleSnackBar = this.locatorForOptional('.mat-simple-snackbar');\n  private _simpleSnackBarMessage = this.locatorFor('.mat-simple-snackbar > span');\n  private _simpleSnackBarActionButton =\n      this.locatorForOptional('.mat-simple-snackbar-action > button');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatSnackBarHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which snack bar instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: SnackBarHarnessFilters = {}): HarnessPredicate<MatSnackBarHarness> {\n    return new HarnessPredicate(MatSnackBarHarness, options);\n  }\n\n  /**\n   * Gets the role of the snack-bar. The role of a snack-bar is determined based\n   * on the ARIA politeness specified in the snack-bar config.\n   */\n  async getRole(): Promise<'alert'|'status'|null> {\n    return (await this.host()).getAttribute('role') as Promise<'alert'|'status'|null>;\n  }\n\n  /**\n   * Whether the snack-bar has an action. Method cannot be used for snack-bar's with custom content.\n   */\n  async hasAction(): Promise<boolean> {\n    await this._assertSimpleSnackBar();\n    return (await this._simpleSnackBarActionButton()) !== null;\n  }\n\n  /**\n   * Gets the description of the snack-bar. Method cannot be used for snack-bar's without action or\n   * with custom content.\n   */\n  async getActionDescription(): Promise<string> {\n    await this._assertSimpleSnackBarWithAction();\n    return (await this._simpleSnackBarActionButton())!.text();\n  }\n\n\n  /**\n   * Dismisses the snack-bar by clicking the action button. Method cannot be used for snack-bar's\n   * without action or with custom content.\n   */\n  async dismissWithAction(): Promise<void> {\n    await this._assertSimpleSnackBarWithAction();\n    await (await this._simpleSnackBarActionButton())!.click();\n  }\n\n  /**\n   * Gets the message of the snack-bar. Method cannot be used for snack-bar's with custom content.\n   */\n  async getMessage(): Promise<string> {\n    await this._assertSimpleSnackBar();\n    return (await this._simpleSnackBarMessage()).text();\n  }\n\n  /**\n   * Asserts that the current snack-bar does not use custom content. Promise rejects if\n   * custom content is used.\n   */\n  private async _assertSimpleSnackBar(): Promise<void> {\n    if (!await this._isSimpleSnackBar()) {\n      throw new Error('Method cannot be used for snack-bar with custom content.');\n    }\n  }\n\n  /**\n   * Asserts that the current snack-bar does not use custom content and has\n   * an action defined. Otherwise the promise will reject.\n   */\n  private async _assertSimpleSnackBarWithAction(): Promise<void> {\n    await this._assertSimpleSnackBar();\n    if (!await this.hasAction()) {\n      throw new Error('Method cannot be used for standard snack-bar without action.');\n    }\n  }\n\n  /** Whether the snack-bar is using the default content template. */\n  private async _isSimpleSnackBar(): Promise<boolean> {\n    return await this._simpleSnackBar() !== null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './snack-bar-harness';\nexport * from './snack-bar-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["__extends","HarnessPredicate","ComponentHarness"],"mappings":";;;;;;IAAA;;;;;;;IAWA;AACA;QAAwCA,4CAAgB;QAAxD;YAAA,qEAyFC;YAnFS,qBAAe,GAAG,KAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAC;YAClE,4BAAsB,GAAG,KAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;YACxE,iCAA2B,GAC/B,KAAI,CAAC,kBAAkB,CAAC,sCAAsC,CAAC,CAAC;;SAgFrE;;;;;;;QAxEQ,uBAAI,GAAX,UAAY,OAAoC;YAApC,wBAAA,EAAA,YAAoC;YAC9C,OAAO,IAAIC,wBAAgB,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;SAC1D;;;;;QAMK,oCAAO,GAAb;;;;gCACU,qBAAM,IAAI,CAAC,IAAI,EAAE,EAAA;gCAAzB,sBAAO,CAAC,SAAiB,EAAE,YAAY,CAAC,MAAM,CAAmC,EAAC;;;;SACnF;;;;QAKK,sCAAS,GAAf;;;;gCACE,qBAAM,IAAI,CAAC,qBAAqB,EAAE,EAAA;;4BAAlC,SAAkC,CAAC;4BAC3B,qBAAM,IAAI,CAAC,2BAA2B,EAAE,EAAA;gCAAhD,sBAAO,CAAC,SAAwC,MAAM,IAAI,EAAC;;;;SAC5D;;;;;QAMK,iDAAoB,GAA1B;;;;gCACE,qBAAM,IAAI,CAAC,+BAA+B,EAAE,EAAA;;4BAA5C,SAA4C,CAAC;4BACrC,qBAAM,IAAI,CAAC,2BAA2B,EAAE,EAAA;gCAAhD,sBAAO,CAAC,SAAwC,EAAG,IAAI,EAAE,EAAC;;;;SAC3D;;;;;QAOK,8CAAiB,GAAvB;;;;gCACE,qBAAM,IAAI,CAAC,+BAA+B,EAAE,EAAA;;4BAA5C,SAA4C,CAAC;4BACtC,qBAAM,IAAI,CAAC,2BAA2B,EAAE,EAAA;gCAA/C,qBAAM,CAAC,SAAwC,EAAG,KAAK,EAAE,EAAA;;4BAAzD,SAAyD,CAAC;;;;;SAC3D;;;;QAKK,uCAAU,GAAhB;;;;gCACE,qBAAM,IAAI,CAAC,qBAAqB,EAAE,EAAA;;4BAAlC,SAAkC,CAAC;4BAC3B,qBAAM,IAAI,CAAC,sBAAsB,EAAE,EAAA;gCAA3C,sBAAO,CAAC,SAAmC,EAAE,IAAI,EAAE,EAAC;;;;SACrD;;;;;QAMa,kDAAqB,GAAnC;;;;gCACO,qBAAM,IAAI,CAAC,iBAAiB,EAAE,EAAA;;4BAAnC,IAAI,EAAC,SAA8B,CAAA,EAAE;gCACnC,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;6BAC7E;;;;;SACF;;;;;QAMa,4DAA+B,GAA7C;;;;gCACE,qBAAM,IAAI,CAAC,qBAAqB,EAAE,EAAA;;4BAAlC,SAAkC,CAAC;4BAC9B,qBAAM,IAAI,CAAC,SAAS,EAAE,EAAA;;4BAA3B,IAAI,EAAC,SAAsB,CAAA,EAAE;gCAC3B,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;6BACjF;;;;;SACF;;QAGa,8CAAiB,GAA/B;;;;gCACS,qBAAM,IAAI,CAAC,eAAe,EAAE,EAAA;gCAAnC,sBAAO,CAAA,SAA4B,MAAK,IAAI,EAAC;;;;SAC9C;;;;QApFM,+BAAY,GAAG,0BAA0B,CAAC;QAqFnD,yBAAC;KAAA,CAzFuCC,wBAAgB;;ICZxD;;;;;;OAMG;;ICNH;;;;;;OAMG;;;;;;;;;;;;"}