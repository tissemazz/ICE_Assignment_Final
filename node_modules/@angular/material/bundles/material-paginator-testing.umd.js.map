{"version":3,"file":"material-paginator-testing.umd.js","sources":["../../../../../../../src/material/paginator/testing/paginator-harness.ts","../../../../../../../src/material/paginator/testing/public-api.ts","../../../../../../../src/material/paginator/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {MatSelectHarness} from '@angular/material/select/testing';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {PaginatorHarnessFilters} from './paginator-harness-filters';\n\n\n/** Harness for interacting with a standard mat-paginator in tests. */\nexport class MatPaginatorHarness extends ComponentHarness {\n  /** Selector used to find paginator instances. */\n  static hostSelector = '.mat-paginator';\n  private _nextButton = this.locatorFor('.mat-paginator-navigation-next');\n  private _previousButton = this.locatorFor('.mat-paginator-navigation-previous');\n  private _firstPageButton = this.locatorForOptional('.mat-paginator-navigation-first');\n  private _lastPageButton = this.locatorForOptional('.mat-paginator-navigation-last');\n  private _select = this.locatorForOptional(MatSelectHarness.with({\n    ancestor: '.mat-paginator-page-size'\n  }));\n  private _pageSizeFallback = this.locatorFor('.mat-paginator-page-size-value');\n  private _rangeLabel = this.locatorFor('.mat-paginator-range-label');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatPaginatorHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which paginator instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: PaginatorHarnessFilters = {}): HarnessPredicate<MatPaginatorHarness> {\n    return new HarnessPredicate(MatPaginatorHarness, options);\n  }\n\n  /** Goes to the next page in the paginator. */\n  async goToNextPage(): Promise<void> {\n    return (await this._nextButton()).click();\n  }\n\n  /** Goes to the previous page in the paginator. */\n  async goToPreviousPage(): Promise<void> {\n    return (await this._previousButton()).click();\n  }\n\n  /** Goes to the first page in the paginator. */\n  async goToFirstPage(): Promise<void> {\n    const button = await this._firstPageButton();\n\n    // The first page button isn't enabled by default so we need to check for it.\n    if (!button) {\n      throw Error('Could not find first page button inside paginator. ' +\n                  'Make sure that `showFirstLastButtons` is enabled.');\n    }\n\n    return button.click();\n  }\n\n  /** Goes to the last page in the paginator. */\n  async goToLastPage(): Promise<void> {\n    const button = await this._lastPageButton();\n\n    // The last page button isn't enabled by default so we need to check for it.\n    if (!button) {\n      throw Error('Could not find last page button inside paginator. ' +\n                  'Make sure that `showFirstLastButtons` is enabled.');\n    }\n\n    return button.click();\n  }\n\n  /**\n   * Sets the page size of the paginator.\n   * @param size Page size that should be select.\n   */\n  async setPageSize(size: number): Promise<void> {\n    const select = await this._select();\n\n    // The select is only available if the `pageSizeOptions` are\n    // set to an array with more than one item.\n    if (!select) {\n      throw Error('Cannot find page size selector in paginator. ' +\n                  'Make sure that the `pageSizeOptions` have been configured.');\n    }\n\n    return select.clickOptions({text: `${size}`});\n  }\n\n  /** Gets the page size of the paginator. */\n  async getPageSize(): Promise<number> {\n    const select = await this._select();\n    const value = select ? select.getValueText() : (await this._pageSizeFallback()).text();\n    return coerceNumberProperty(await value);\n  }\n\n  /** Gets the text of the range labe of the paginator. */\n  async getRangeLabel(): Promise<string> {\n    return (await this._rangeLabel()).text();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './paginator-harness';\nexport * from './paginator-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["__extends","MatSelectHarness","HarnessPredicate","coerceNumberProperty","ComponentHarness"],"mappings":";;;;;;IAAA;;;;;;;IAcA;AACA;QAAyCA,6CAAgB;QAAzD;YAAA,qEAuFC;YApFS,iBAAW,GAAG,KAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;YAChE,qBAAe,GAAG,KAAI,CAAC,UAAU,CAAC,oCAAoC,CAAC,CAAC;YACxE,sBAAgB,GAAG,KAAI,CAAC,kBAAkB,CAAC,iCAAiC,CAAC,CAAC;YAC9E,qBAAe,GAAG,KAAI,CAAC,kBAAkB,CAAC,gCAAgC,CAAC,CAAC;YAC5E,aAAO,GAAG,KAAI,CAAC,kBAAkB,CAACC,0BAAgB,CAAC,IAAI,CAAC;gBAC9D,QAAQ,EAAE,0BAA0B;aACrC,CAAC,CAAC,CAAC;YACI,uBAAiB,GAAG,KAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;YACtE,iBAAW,GAAG,KAAI,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;;SA4ErE;;;;;;;QApEQ,wBAAI,GAAX,UAAY,OAAqC;YAArC,wBAAA,EAAA,YAAqC;YAC/C,OAAO,IAAIC,wBAAgB,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;SAC3D;;QAGK,0CAAY,GAAlB;;;;gCACU,qBAAM,IAAI,CAAC,WAAW,EAAE,EAAA;gCAAhC,sBAAO,CAAC,SAAwB,EAAE,KAAK,EAAE,EAAC;;;;SAC3C;;QAGK,8CAAgB,GAAtB;;;;gCACU,qBAAM,IAAI,CAAC,eAAe,EAAE,EAAA;gCAApC,sBAAO,CAAC,SAA4B,EAAE,KAAK,EAAE,EAAC;;;;SAC/C;;QAGK,2CAAa,GAAnB;;;;;gCACiB,qBAAM,IAAI,CAAC,gBAAgB,EAAE,EAAA;;4BAAtC,MAAM,GAAG,SAA6B;;4BAG5C,IAAI,CAAC,MAAM,EAAE;gCACX,MAAM,KAAK,CAAC,qDAAqD;oCACrD,mDAAmD,CAAC,CAAC;6BAClE;4BAED,sBAAO,MAAM,CAAC,KAAK,EAAE,EAAC;;;;SACvB;;QAGK,0CAAY,GAAlB;;;;;gCACiB,qBAAM,IAAI,CAAC,eAAe,EAAE,EAAA;;4BAArC,MAAM,GAAG,SAA4B;;4BAG3C,IAAI,CAAC,MAAM,EAAE;gCACX,MAAM,KAAK,CAAC,oDAAoD;oCACpD,mDAAmD,CAAC,CAAC;6BAClE;4BAED,sBAAO,MAAM,CAAC,KAAK,EAAE,EAAC;;;;SACvB;;;;;QAMK,yCAAW,GAAjB,UAAkB,IAAY;;;;;gCACb,qBAAM,IAAI,CAAC,OAAO,EAAE,EAAA;;4BAA7B,MAAM,GAAG,SAAoB;;;4BAInC,IAAI,CAAC,MAAM,EAAE;gCACX,MAAM,KAAK,CAAC,+CAA+C;oCAC/C,4DAA4D,CAAC,CAAC;6BAC3E;4BAED,sBAAO,MAAM,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,KAAG,IAAM,EAAC,CAAC,EAAC;;;;SAC/C;;QAGK,yCAAW,GAAjB;;;;;gCACiB,qBAAM,IAAI,CAAC,OAAO,EAAE,EAAA;;4BAA7B,MAAM,GAAG,SAAoB;iCACrB,MAAM,EAAN,wBAAM;4BAAG,KAAA,MAAM,CAAC,YAAY,EAAE,CAAA;;gCAAI,qBAAM,IAAI,CAAC,iBAAiB,EAAE,EAAA;;4BAA/B,KAAA,CAAC,SAA8B,EAAE,IAAI,EAAE,CAAA;;;4BAAhF,KAAK,KAA2E;4BAC/E,KAAAC,6BAAoB,CAAA;4BAAC,qBAAM,KAAK,EAAA;gCAAvC,sBAAO,kBAAqB,SAAW,EAAC,EAAC;;;;SAC1C;;QAGK,2CAAa,GAAnB;;;;gCACU,qBAAM,IAAI,CAAC,WAAW,EAAE,EAAA;gCAAhC,sBAAO,CAAC,SAAwB,EAAE,IAAI,EAAE,EAAC;;;;SAC1C;;QApFM,gCAAY,GAAG,gBAAgB,CAAC;QAqFzC,0BAAC;KAAA,CAvFwCC,wBAAgB;;ICfzD;;;;;;OAMG;;ICNH;;;;;;OAMG;;;;;;;;;;;;"}