{"version":3,"file":"material-slider.umd.js","sources":["../../../../../../src/material/slider/slider.ts","../../../../../../src/material/slider/slider-module.ts","../../../../../../src/material/slider/public-api.ts","../../../../../../src/material/slider/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinColor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {Subscription} from 'rxjs';\n\nconst activeEventOptions = normalizePassiveListenerOptions({passive: false});\n\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n\n/** A simple change event emitted by the MatSlider component. */\nexport class MatSliderChange {\n  /** The MatSlider that changed. */\n  source: MatSlider;\n\n  /** The new value of the source slider. */\n  value: number | null;\n}\n\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatSliderMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof MatSliderBase =\n        mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n@Component({\n  selector: 'mat-slider',\n  exportAs: 'matSlider',\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n\n    // On Safari starting to slide temporarily triggers text selection mode which\n    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n    '(selectstart)': '$event.preventDefault()',\n    'class': 'mat-slider mat-focus-indicator',\n    'role': 'slider',\n    '[tabIndex]': 'tabIndex',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\n    // Class binding which is only used by the test harness as there is no other\n    // way for the harness to detect if mouse coordinates need to be inverted.\n    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue',\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlider extends _MatSliderMixinBase\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor, OnInit, HasTabIndex {\n  /** Whether the slider is inverted. */\n  @Input()\n  get invert(): boolean { return this._invert; }\n  set invert(value: boolean) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  private _invert = false;\n\n  /** The maximum value that the slider can have. */\n  @Input()\n  get max(): number { return this._max; }\n  set max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _max: number = 100;\n\n  /** The minimum value that the slider can have. */\n  @Input()\n  get min(): number { return this._min; }\n  set min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _min: number = 0;\n\n  /** The values at which the thumb will snap. */\n  @Input()\n  get step(): number { return this._step; }\n  set step(v: number) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop()!.length;\n    }\n\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _step: number = 1;\n\n  /** Whether or not to show the thumb label. */\n  @Input()\n  get thumbLabel(): boolean { return this._thumbLabel; }\n  set thumbLabel(value: boolean) { this._thumbLabel = coerceBooleanProperty(value); }\n  private _thumbLabel: boolean = false;\n\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  @Input()\n  get tickInterval() { return this._tickInterval; }\n  set tickInterval(value: 'auto' | number) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval as number);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  private _tickInterval: 'auto' | number = 0;\n\n  /** Value of the slider. */\n  @Input()\n  get value(): number | null {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n  set value(v: number | null) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v);\n\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _value: number | null = null;\n\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  @Input() displayWith: (value: number) => string | number;\n\n  /** Whether the slider is vertical. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical = false;\n\n  /** Event emitted when the slider value has changed. */\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /** Event emitted when the slider thumb moves. */\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /**\n   * Emits when the raw value of the slider changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<number | null> = new EventEmitter<number | null>();\n\n  /** The value to be used for display purposes. */\n  get displayValue(): string | number {\n    if (this.displayWith) {\n      // Value is never null but since setters and getters cannot have\n      // different types, the value getter is also typed to return null.\n      return this.displayWith(this.value!);\n    }\n\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n\n  /** set focus to the host element */\n  focus(options?: FocusOptions) {\n    this._focusHostElement(options);\n  }\n\n  /** blur the host element */\n  blur() {\n    this._blurHostElement();\n  }\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /** The percentage of the slider that coincides with the value. */\n  get percent(): number { return this._clamp(this._percent); }\n  private _percent: number = 0;\n\n  /**\n   * Whether or not the thumb is sliding.\n   * Used to determine if there should be a transition for the thumb and fill track.\n   */\n  _isSliding: boolean = false;\n\n  /**\n   * Whether or not the slider is active (clicked or sliding).\n   * Used to shrink and grow the thumb as according to the Material Design spec.\n   */\n  _isActive: boolean = false;\n\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n  get _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n\n\n  /** Whether the slider is at its minimum value. */\n  get _isMinValue() {\n    return this.percent === 0;\n  }\n\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n  get _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n\n  /** CSS styles for the track background element. */\n  get _trackBackgroundStyles(): { [key: string]: string } {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n\n  /** CSS styles for the track fill element. */\n  get _trackFillStyles(): { [key: string]: string } {\n    const percent = this.percent;\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n      // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n      // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n      // the value of the slider is 0, we can easily get into this situation. We force a\n      // recalculation by changing the element's `display` when it goes from 0 to any other value.\n      display: percent === 0 ? 'none' : ''\n    };\n  }\n\n  /** CSS styles for the ticks container element. */\n  get _ticksContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n\n  /** CSS styles for the ticks element. */\n  get _ticksStyles(): { [key: string]: string } {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      let side: string;\n\n      if (this.vertical) {\n        side = this._invertAxis ? 'Bottom' : 'Top';\n      } else {\n        side = this._invertAxis ? 'Right' : 'Left';\n      }\n\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n\n  get _thumbContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let invertOffset =\n        (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n\n  /** The size of a tick interval as a percentage of the size of the track. */\n  private _tickIntervalPercent: number = 0;\n\n  /** The dimensions of the slider. */\n  private _sliderDimensions: ClientRect | null = null;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /** Decimal places to round to, based on the step amount. */\n  private _roundToDecimal: number;\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** The value of the slider when the slide start event fires. */\n  private _valueOnSlideStart: number | null;\n\n  /** Position of the pointer when the dragging started. */\n  private _pointerPositionOnStart: {x: number, y: number} | null;\n\n  /** Reference to the inner slider wrapper element. */\n  @ViewChild('sliderWrapper') private _sliderWrapper: ElementRef;\n\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n  _shouldInvertMouseCoords() {\n    return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n  }\n\n  /** The language direction for this slider element. */\n  private _getDirection() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n\n  /** Keeps track of the last pointer event that was captured by the slider. */\n  private _lastPointerEvent: MouseEvent | TouchEvent | null;\n\n  /** Used to subscribe to global move and end events */\n  protected _document?: Document;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Attribute('tabindex') tabIndex: string,\n              // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\n              // @breaking-change 9.0.0 `_ngZone` parameter to be made required.\n              private _ngZone?: NgZone,\n              /** @breaking-change 11.0.0 make document required */\n              @Optional() @Inject(DOCUMENT) document?: any) {\n    super(elementRef);\n\n    this._document = document;\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    this._runOutsizeZone(() => {\n      const element = elementRef.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n\n  ngOnInit() {\n    this._focusMonitor\n        .monitor(this._elementRef, true)\n        .subscribe((origin: FocusOrigin) => {\n          this._isActive = !!origin && origin !== 'keyboard';\n          this._changeDetectorRef.detectChanges();\n        });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onBlur() {\n    this.onTouched();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (this.disabled || hasModifierKey(event)) {\n      return;\n    }\n\n    const oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n\n  _onKeyup() {\n    this._isSliding = false;\n  }\n\n  /** Called when the user has put their pointer down on the slider. */\n  private _pointerDown = (event: TouchEvent | MouseEvent) => {\n    // Don't do anything if the slider is disabled or the\n    // user is using anything other than the main mouse button.\n    if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n      return;\n    }\n\n    this._runInsideZone(() => {\n      const oldValue = this.value;\n      const pointerPosition = getPointerPositionOnPage(event);\n      this._isSliding = true;\n      this._lastPointerEvent = event;\n      event.preventDefault();\n      this._focusHostElement();\n      this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n      this._bindGlobalEvents(event);\n      this._focusHostElement();\n      this._updateValueFromPosition(pointerPosition);\n      this._valueOnSlideStart = this.value;\n      this._pointerPositionOnStart = pointerPosition;\n\n      // Emit a change and input event if the value changed.\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n        this._emitChangeEvent();\n      }\n    });\n  }\n\n  /**\n   * Called when the user has moved their pointer after\n   * starting to drag. Bound on the document level.\n   */\n  private _pointerMove = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      // Prevent the slide from selecting anything else.\n      event.preventDefault();\n      const oldValue = this.value;\n      this._lastPointerEvent = event;\n      this._updateValueFromPosition(getPointerPositionOnPage(event));\n\n      // Native range elements always emit `input` events when the value changed while sliding.\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n      }\n    }\n  }\n\n  /** Called when the user has lifted their pointer. Bound on the document level. */\n  private _pointerUp = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      const pointerPositionOnStart = this._pointerPositionOnStart;\n      const currentPointerPosition = getPointerPositionOnPage(event);\n\n      event.preventDefault();\n      this._removeGlobalEvents();\n      this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n      this._isSliding = false;\n\n      if (this._valueOnSlideStart != this.value && !this.disabled &&\n          pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n          pointerPositionOnStart.y !== currentPointerPosition.y)) {\n        this._emitChangeEvent();\n      }\n    }\n  }\n\n  /** Called when the window has lost focus. */\n  private _windowBlur = () => {\n    // If the window is blurred while dragging we need to stop dragging because the\n    // browser won't dispatch the `mouseup` and `touchend` events anymore.\n    if (this._lastPointerEvent) {\n      this._pointerUp(this._lastPointerEvent);\n    }\n  }\n\n  /**\n   * Binds our global move and end events. They're bound at the document level and only while\n   * dragging so that the user doesn't have to keep their pointer exactly over the slider\n   * as they're swiping across the screen.\n   */\n  private _bindGlobalEvents(triggerEvent: TouchEvent | MouseEvent) {\n    if (typeof this._document !== 'undefined' && this._document) {\n      const body = this._document.body;\n      const isTouch = isTouchEvent(triggerEvent);\n      const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n      const endEventName = isTouch ? 'touchend' : 'mouseup';\n      body.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n      body.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n      if (isTouch) {\n        body.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n      }\n    }\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Removes any global event listeners that we may have added. */\n  private _removeGlobalEvents() {\n    if (typeof this._document !== 'undefined' && this._document) {\n      const body = this._document.body;\n      body.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n      body.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n      body.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n      body.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n      body.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Increments the slider by the given number of steps (negative number decrements). */\n  private _increment(numSteps: number) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n  private _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n\n      // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n\n  /** Emits a change event if the current value is different from the last emitted value. */\n  private _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n\n  /** Emits an input event when the current value is different from the last emitted value. */\n  private _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n  private _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n\n  /** Creates a slider change object from the specified value. */\n  private _createChangeEvent(value = this.value): MatSliderChange {\n    let event = new MatSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n\n  /** Calculates the percentage of the slider that a value is. */\n  private _calculatePercentage(value: number | null) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n\n  /** Calculates the value a percentage of the slider corresponds to. */\n  private _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n\n  /** Return a number between two numbers. */\n  private _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n  private _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n  private _focusHostElement(options?: FocusOptions) {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Blurs the native element. */\n  private _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n\n  /** Runs a callback inside of the NgZone, if possible. */\n  private _runInsideZone(fn: () => any) {\n    // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n    this._ngZone ? this._ngZone.run(fn) : fn();\n  }\n\n  /** Runs a callback outside of the NgZone, if possible. */\n  private _runOutsizeZone(fn: () => any) {\n    // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n    this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_invert: BooleanInput;\n  static ngAcceptInputType_max: NumberInput;\n  static ngAcceptInputType_min: NumberInput;\n  static ngAcceptInputType_step: NumberInput;\n  static ngAcceptInputType_thumbLabel: BooleanInput;\n  static ngAcceptInputType_tickInterval: NumberInput;\n  static ngAcceptInputType_value: NumberInput;\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event: MouseEvent | TouchEvent) {\n  // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n  const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n  return {x: point.clientX, y: point.clientY};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatSlider} from './slider';\n\n\n@NgModule({\n  imports: [CommonModule, MatCommonModule],\n  exports: [MatSlider, MatCommonModule],\n  declarations: [MatSlider],\n})\nexport class MatSliderModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './slider-module';\nexport * from './slider';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["normalizePassiveListenerOptions","NG_VALUE_ACCESSOR","forwardRef","mixinTabIndex","mixinColor","mixinDisabled","__extends","EventEmitter","Subscription","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","FocusMonitor","ChangeDetectorRef","Directionality","Optional","Attribute","Inject","ANIMATION_MODULE_TYPE","NgZone","DOCUMENT","Input","Output","ViewChild","NgModule","CommonModule","MatCommonModule"],"mappings":"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"}