{"version":3,"sources":["src/material/material-button.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","button","core","tslib","cdk","a11y","platformBrowser","animations","this","core$1","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButton","_super","elementRef","_focusMonitor","_animationMode","e_1","_a","_this","call","isRoundButton","_hasHostAttributes","isIconButton","BUTTON_HOST_ATTRIBUTES_1","__values","BUTTON_HOST_ATTRIBUTES_1_1","next","done","attr","value","_getHostElement","classList","add","e_1_1","error","return","nativeElement","monitor","_elementRef","color","__extends","prototype","ngOnDestroy","stopMonitoring","focus","origin","options","focusVia","_isRippleDisabled","disableRipple","disabled","attributes","_i","arguments","length","some","attribute","hasAttribute","decorators","type","Component","args","selector","exportAs","host","[attr.disabled]","[class._mat-animation-noopable]","class","template","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","ctorParameters","ElementRef","FocusMonitor","String","Optional","Inject","ANIMATION_MODULE_TYPE","propDecorators","ripple","ViewChild","MatRipple","mixinColor","mixinDisabled","mixinDisableRipple","MatButtonBase","MatAnchor","focusMonitor","animationMode","_haltDisabledEvents","event","preventDefault","stopImmediatePropagation","[attr.tabindex]","[attr.aria-disabled]","(click)","tabIndex","Input","MatButtonModule","NgModule","imports","MatRippleModule","MatCommonModule","declarations","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/material/core'), require('tslib'), require('@angular/cdk/a11y'), require('@angular/platform-browser/animations')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/button', ['exports', '@angular/core', '@angular/material/core', 'tslib', '@angular/cdk/a11y', '@angular/platform-browser/animations'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.button = {}), global.ng.core, global.ng.material.core, global.tslib, global.ng.cdk.a11y, global.ng.platformBrowser.animations));\n}(this, (function (exports, core, core$1, tslib, a11y, animations) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Default color palette for round buttons (mat-fab and mat-mini-fab) */\n    var DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n    /**\n     * List of classes to add to MatButton instances based on host attributes to\n     * style as different variants.\n     */\n    var BUTTON_HOST_ATTRIBUTES = [\n        'mat-button',\n        'mat-flat-button',\n        'mat-icon-button',\n        'mat-raised-button',\n        'mat-stroked-button',\n        'mat-mini-fab',\n        'mat-fab',\n    ];\n    // Boilerplate for applying mixins to MatButton.\n    /** @docs-private */\n    var MatButtonBase = /** @class */ (function () {\n        function MatButtonBase(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        return MatButtonBase;\n    }());\n    var _MatButtonMixinBase = core$1.mixinColor(core$1.mixinDisabled(core$1.mixinDisableRipple(MatButtonBase)));\n    /**\n     * Material design button.\n     */\n    var MatButton = /** @class */ (function (_super) {\n        tslib.__extends(MatButton, _super);\n        function MatButton(elementRef, _focusMonitor, _animationMode) {\n            var e_1, _a;\n            var _this = _super.call(this, elementRef) || this;\n            _this._focusMonitor = _focusMonitor;\n            _this._animationMode = _animationMode;\n            /** Whether the button is round. */\n            _this.isRoundButton = _this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n            /** Whether the button is icon button. */\n            _this.isIconButton = _this._hasHostAttributes('mat-icon-button');\n            try {\n                // For each of the variant selectors that is present in the button's host\n                // attributes, add the correct corresponding class.\n                for (var BUTTON_HOST_ATTRIBUTES_1 = tslib.__values(BUTTON_HOST_ATTRIBUTES), BUTTON_HOST_ATTRIBUTES_1_1 = BUTTON_HOST_ATTRIBUTES_1.next(); !BUTTON_HOST_ATTRIBUTES_1_1.done; BUTTON_HOST_ATTRIBUTES_1_1 = BUTTON_HOST_ATTRIBUTES_1.next()) {\n                    var attr = BUTTON_HOST_ATTRIBUTES_1_1.value;\n                    if (_this._hasHostAttributes(attr)) {\n                        _this._getHostElement().classList.add(attr);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (BUTTON_HOST_ATTRIBUTES_1_1 && !BUTTON_HOST_ATTRIBUTES_1_1.done && (_a = BUTTON_HOST_ATTRIBUTES_1.return)) _a.call(BUTTON_HOST_ATTRIBUTES_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            // Add a class that applies to all buttons. This makes it easier to target if somebody\n            // wants to target all Material buttons. We do it here rather than `host` to ensure that\n            // the class is applied to derived classes.\n            elementRef.nativeElement.classList.add('mat-button-base');\n            _this._focusMonitor.monitor(_this._elementRef, true);\n            if (_this.isRoundButton) {\n                _this.color = DEFAULT_ROUND_BUTTON_COLOR;\n            }\n            return _this;\n        }\n        MatButton.prototype.ngOnDestroy = function () {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        };\n        /** Focuses the button. */\n        MatButton.prototype.focus = function (origin, options) {\n            if (origin === void 0) { origin = 'program'; }\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        };\n        MatButton.prototype._getHostElement = function () {\n            return this._elementRef.nativeElement;\n        };\n        MatButton.prototype._isRippleDisabled = function () {\n            return this.disableRipple || this.disabled;\n        };\n        /** Gets whether the button has one of the given attributes. */\n        MatButton.prototype._hasHostAttributes = function () {\n            var _this = this;\n            var attributes = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                attributes[_i] = arguments[_i];\n            }\n            return attributes.some(function (attribute) { return _this._getHostElement().hasAttribute(attribute); });\n        };\n        MatButton.decorators = [\n            { type: core.Component, args: [{\n                        selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\",\n                        exportAs: 'matButton',\n                        host: {\n                            '[attr.disabled]': 'disabled || null',\n                            '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                            'class': 'mat-focus-indicator',\n                        },\n                        template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                        inputs: ['disabled', 'disableRipple', 'color'],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatButton.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: a11y.FocusMonitor },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        MatButton.propDecorators = {\n            ripple: [{ type: core.ViewChild, args: [core$1.MatRipple,] }]\n        };\n        return MatButton;\n    }(_MatButtonMixinBase));\n    /**\n     * Material design anchor button.\n     */\n    var MatAnchor = /** @class */ (function (_super) {\n        tslib.__extends(MatAnchor, _super);\n        function MatAnchor(focusMonitor, elementRef, animationMode) {\n            return _super.call(this, elementRef, focusMonitor, animationMode) || this;\n        }\n        MatAnchor.prototype._haltDisabledEvents = function (event) {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n        MatAnchor.decorators = [\n            { type: core.Component, args: [{\n                        selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\",\n                        exportAs: 'matButton, matAnchor',\n                        host: {\n                            // Note that we ignore the user-specified tabindex when it's disabled for\n                            // consistency with the `mat-button` applied on native buttons where even\n                            // though they have an index, they're not tabbable.\n                            '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                            '[attr.disabled]': 'disabled || null',\n                            '[attr.aria-disabled]': 'disabled.toString()',\n                            '(click)': '_haltDisabledEvents($event)',\n                            '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                            'class': 'mat-focus-indicator',\n                        },\n                        inputs: ['disabled', 'disableRipple', 'color'],\n                        template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatAnchor.ctorParameters = function () { return [\n            { type: a11y.FocusMonitor },\n            { type: core.ElementRef },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        MatAnchor.propDecorators = {\n            tabIndex: [{ type: core.Input }]\n        };\n        return MatAnchor;\n    }(MatButton));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatButtonModule = /** @class */ (function () {\n        function MatButtonModule() {\n        }\n        MatButtonModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            core$1.MatRippleModule,\n                            core$1.MatCommonModule,\n                        ],\n                        exports: [\n                            MatButton,\n                            MatAnchor,\n                            core$1.MatCommonModule,\n                        ],\n                        declarations: [\n                            MatButton,\n                            MatAnchor,\n                        ],\n                    },] }\n        ];\n        return MatButtonModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MatAnchor = MatAnchor;\n    exports.MatButton = MatButton;\n    exports.MatButtonModule = MatButtonModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-button.umd.js.map\n"]}