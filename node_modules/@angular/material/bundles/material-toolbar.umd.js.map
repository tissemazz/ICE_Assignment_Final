{"version":3,"file":"material-toolbar.umd.js","sources":["../../../../../../src/material/toolbar/toolbar.ts","../../../../../../src/material/toolbar/toolbar-module.ts","../../../../../../src/material/toolbar/public-api.ts","../../../../../../src/material/toolbar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Inject,\n  isDevMode,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nclass MatToolbarBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatToolbarMixinBase: CanColorCtor & typeof MatToolbarBase = mixinColor(MatToolbarBase);\n\n@Directive({\n  selector: 'mat-toolbar-row',\n  exportAs: 'matToolbarRow',\n  host: {'class': 'mat-toolbar-row'},\n})\nexport class MatToolbarRow {}\n\n@Component({\n  selector: 'mat-toolbar',\n  exportAs: 'matToolbar',\n  templateUrl: 'toolbar.html',\n  styleUrls: ['toolbar.css'],\n  inputs: ['color'],\n  host: {\n    'class': 'mat-toolbar',\n    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatToolbar extends _MatToolbarMixinBase implements CanColor, AfterViewInit {\n  private _document: Document;\n\n  /** Reference to all toolbar row elements that have been projected. */\n  @ContentChildren(MatToolbarRow, {descendants: true}) _toolbarRows: QueryList<MatToolbarRow>;\n\n  constructor(\n    elementRef: ElementRef,\n    private _platform: Platform,\n    @Inject(DOCUMENT) document?: any) {\n    super(elementRef);\n\n    // TODO: make the document a required param when doing breaking changes.\n    this._document = document;\n  }\n\n  ngAfterViewInit() {\n    if (!isDevMode() || !this._platform.isBrowser) {\n      return;\n    }\n\n    this._checkToolbarMixedModes();\n    this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n  }\n\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  private _checkToolbarMixedModes() {\n    if (!this._toolbarRows.length) {\n      return;\n    }\n\n    // Check if there are any other DOM nodes that can display content but aren't inside of\n    // a <mat-toolbar-row> element.\n    const isCombinedUsage = Array.from<HTMLElement>(this._elementRef.nativeElement.childNodes)\n      .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n      .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n      .some(node => !!(node.textContent && node.textContent.trim()));\n\n    if (isCombinedUsage) {\n      throwToolbarMixedModesError();\n    }\n  }\n}\n\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nexport function throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n    'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n    'inside of a `<mat-toolbar>` for a single row.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatToolbar, MatToolbarRow} from './toolbar';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n  declarations: [MatToolbar, MatToolbarRow],\n})\nexport class MatToolbarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './toolbar-module';\nexport * from './toolbar';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["mixinColor","Directive","__extends","isDevMode","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","Platform","Inject","DOCUMENT","ContentChildren","NgModule","MatCommonModule"],"mappings":"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"}