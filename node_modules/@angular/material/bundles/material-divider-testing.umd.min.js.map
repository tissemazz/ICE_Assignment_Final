{"version":3,"sources":["src/material/material-divider-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","divider","testing","tslib","cdk","this","MatDividerHarness","_super","apply","arguments","__extends","with","options","HarnessPredicate","prototype","getOrientation","__awaiter","__generator","_a","label","host","sent","getAttribute","isInset","hasClass","hostSelector","ComponentHarness","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,yBACxF,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,oCAAqC,CAAC,UAAW,QAAS,wBAAyBJ,GAC7GA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,SAAWT,EAAOQ,GAAGC,UAAY,GAAIT,EAAOQ,GAAGC,SAASC,QAAUV,EAAOQ,GAAGC,SAASC,SAAW,GAAIV,EAAOQ,GAAGC,SAASC,QAAQC,QAAU,IAAKX,EAAOY,MAAOZ,EAAOQ,GAAGK,IAAIF,SAHxP,CAIEG,MAAM,SAAWZ,EAASU,EAAOD,GAAW;;;;;;;OAa1C,IAAII,EAAmC,SAAUC,GAE7C,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMH,KAAMI,YAAcJ,KA2B/D,OA7BAF,EAAMO,UAAUJ,EAAmBC,GAInCD,EAAkBK,KAAO,SAAUC,GAE/B,YADgB,IAAZA,IAAsBA,EAAU,IAC7B,IAAIV,EAAQW,iBAAiBP,EAAmBM,IAE3DN,EAAkBQ,UAAUC,eAAiB,WACzC,OAAOZ,EAAMa,UAAUX,UAAM,OAAQ,GAAQ,WACzC,OAAOF,EAAMc,YAAYZ,MAAM,SAAUa,GACrC,OAAQA,EAAGC,OACP,KAAK,EAAG,MAAO,CAAC,EAAad,KAAKe,QAClC,KAAK,EAAG,MAAO,CAAC,EAAeF,EAAGG,OAAQC,aAAa,6BAKvEhB,EAAkBQ,UAAUS,QAAU,WAClC,OAAOpB,EAAMa,UAAUX,UAAM,OAAQ,GAAQ,WACzC,OAAOF,EAAMc,YAAYZ,MAAM,SAAUa,GACrC,OAAQA,EAAGC,OACP,KAAK,EAAG,MAAO,CAAC,EAAad,KAAKe,QAClC,KAAK,EAAG,MAAO,CAAC,EAAeF,EAAGG,OAAQG,SAAS,8BAKnElB,EAAkBmB,aAAe,cAC1BnB,EA9B2B,CA+BpCJ,EAAQwB;;;;;;;;;;;;;;OAkBVjC,EAAQa,kBAAoBA,EAE5BqB,OAAOC,eAAenC,EAAS,aAAc,CAAEoC,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/cdk/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/divider/testing', ['exports', 'tslib', '@angular/cdk/testing'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.divider = global.ng.material.divider || {}, global.ng.material.divider.testing = {}), global.tslib, global.ng.cdk.testing));\n}(this, (function (exports, tslib, testing) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Harness for interacting with a `mat-divider`.\n     * @dynamic\n     */\n    var MatDividerHarness = /** @class */ (function (_super) {\n        tslib.__extends(MatDividerHarness, _super);\n        function MatDividerHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MatDividerHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatDividerHarness, options);\n        };\n        MatDividerHarness.prototype.getOrientation = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getAttribute('aria-orientation')];\n                    }\n                });\n            });\n        };\n        MatDividerHarness.prototype.isInset = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).hasClass('mat-divider-inset')];\n                    }\n                });\n            });\n        };\n        MatDividerHarness.hostSelector = 'mat-divider';\n        return MatDividerHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatDividerHarness = MatDividerHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-divider-testing.umd.js.map\n"]}